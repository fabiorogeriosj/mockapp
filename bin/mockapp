#!/usr/bin/env node

var colors = require('colors');
var fs = require('fs');
var argv = require('minimist')(process.argv.slice(2));
var request = require('request');
var osLocale = require('os-locale');
var message = require('./utils/message');
var config_lang = require('./lang/config');

GLOBAL.packageJson = require('./../package.json');

var _PACKAGEJSONREPO = packageJson.packageJsonRepo;

//commands
var command_new = require('./command/command_new');
var command_preview = require('./command/command_preview');
var command_delete = require('./command/command_delete');
var command_docs = require('./command/command_docs');
var command_bugs = require('./command/command_bugs');
var command_config = require('./command/command_config');


var getCommands = function (){
	for(i in argv._){
		if(!argv[argv._[i]]){
			argv[argv._[i]] = true;
		}
	}
	return argv;
}

GLOBAL.commands = getCommands();

(function mockapp() {


	var showIntro = function (){
		console.log("");
		console.log("   _______  ".green,"           _                       ");
		console.log("  (_______) ".green,"          | |                      ");
		console.log("   _  _  _  ___   ____| |  _ _____ ____  ____  ");
		console.log("  | ||_|| |/ _ \\ / ___) |_/ |____ |  _ \\|  _ \\ ");
		console.log("  | |   | | |_| ( (___|  _ (/ ___ | |_| | |_| |");
		console.log("  |_|   |_|\\___/ \\____)_| \\_)_____|  __/|  __/ ");
		console.log("                                  |_|   |_|    ");
		console.log("\n_______________________________________________\n".green);
		console.log("  ", message.getMessage("VERSION_INSTALED"), ": ", packageJson.version);
		console.log("_______________________________________________\n".green);
		checkNewVersion();
		message.checkMessageRepo();
	}

	var checkNewVersion = function(){
		request(_PACKAGEJSONREPO, function (error, response, body) {
		  if (!error && response.statusCode == 200) {
		    var packageJsonRepo = JSON.parse(body);
				if(packageJsonRepo.version > packageJson.version){
					message.writeMessage("THERE_IS_NEW_VERSION", packageJsonRepo);
				}
		  }
		})
	}

	osLocale(function (err, locale) {
		if(!err){
			message.setLanguage(locale);
		}
		//valid commands
		if(!commands._.length){
				showIntro();
		} else {
			if(commands.new){
				command_new.run()
			} else if(commands.preview){
				command_preview.run()
			} else if(commands.delete){
				command_delete.run()
			} else if(commands.docs){
				command_docs.run()
			} else if(commands.bugs){
				command_bugs.run()
			} else if(commands.config){
				command_config.run()
			} else {
				message.console(message.getMessage("COMMAND_NOT_FOUND"))
			}
		}


	});

})();
