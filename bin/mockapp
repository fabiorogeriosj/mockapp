#!/usr/bin/env node

var colors = require('colors');
var fs = require('fs');
var argv = require('minimist')(process.argv.slice(2));
var request = require('request');
var _PACKAGEJSONREPO = 'https://raw.githubusercontent.com/fabiorogeriosj/mockapp/master/package.json';
var packageJson = JSON.parse(fs.readFileSync(__dirname+'/../package.json', 'utf8'));

//commands
var command_new = require('./command/command_new');


var getCommands = function (){
	for(i in argv._){
		if(!argv[argv._[i]]){
			argv[argv._[i]] = true;
		}
	}
	return argv;
}

var commands = getCommands();

(function mockapp() {


	var showIntro = function (){
		console.log("");
		console.log("   _______             _                       ");
		console.log("  (_______)           | |                      ");
		console.log("   _  _  _  ___   ____| |  _ _____ ____  ____  ");
		console.log("  | ||_|| |/ _ \\ / ___) |_/ |____ |  _ \\|  _ \\ ");
		console.log("  | |   | | |_| ( (___|  _ (/ ___ | |_| | |_| |");
		console.log("  |_|   |_|\\___/ \\____)_| \\_)_____|  __/|  __/ ");
		console.log("                                  |_|   |_|    ");
		console.log("\n_______________________________________________\n".cyan);
		console.log("  Version instaled: ", packageJson.version);
		console.log("_______________________________________________\n".cyan);
		checkNewVersion();
	}

	var checkNewVersion = function(){
		request(_PACKAGEJSONREPO, function (error, response, body) {
		  if (!error && response.statusCode == 200) {
		    var packageJsonRepo = JSON.parse(body);
				if(packageJsonRepo.version >= packageJson.version){
					console.log("                                               ".bgYellow.black);
					console.log("  Hey bro, there is a new version: ".bgYellow.black + packageJson.version.bgYellow.black + "       ".bgYellow.black);
					console.log("                                               ".bgYellow.black);
					console.log("  No panic, just update mockapp:               ".bgYellow.black);
					console.log("  npm install -g mockapp                       ".bgYellow.black);
					console.log("                                               ".bgYellow.black);
				}
		  }
		})
	}

	if(Object.keys(commands).length <= 1){
			showIntro();
	} else {
		if(commands.new){
			command_new.run(commands)
		}

	}

})();
